{"ast":null,"code":"var _jsxFileName = \"/home/pawel/PycharmProjects/clear-air/src/components/PositionMap.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport { Map, Marker, Popup, TileLayer, Tooltip } from 'react-leaflet';\nimport { Icon, latLngBounds } from 'leaflet';\nimport axios from 'axios';\n\nclass PositionMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = e => {\n      this.props.onClickStation(e);\n    };\n\n    this.leafPoint = new Icon({\n      iconUrl: 'icons8-fallen-leaf-48.png',\n      iconSize: [30, 30]\n    });\n  }\n\n  componentDidMount() {\n    console.log(this.props.stations);\n  }\n\n  render() {\n    if (this.props.stations === []) {\n      this.pos = latLngBounds(this.props.stations.map(sta => [sta.gegrLat, sta.gegrLon]));\n    } else {}\n\n    console.log(this.props.stations === [] ? latLngBounds(this.props.stations.map(sta => [sta.gegrLat, sta.gegrLon])) : latLngBounds([[54.754139, 23.642153], [49.293564, 14.382222]]));\n    console.log(this.props.stations);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-wraper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      bounds: this.props.stations === [] ? latLngBounds([[54.754139, 23.642153], [49.293564, 14.382222]]) : latLngBounds(this.props.stations.map(sta => [sta.gegrLat, sta.gegrLon])),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }), this.props.stations.map(sta => {\n      return /*#__PURE__*/React.createElement(Marker, {\n        key: sta.id,\n        position: [sta.gegrLat, sta.gegrLon],\n        icon: this.leafPoint,\n        onClick: this.handleClick.bind(this, sta),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Popup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, sta.name), /*#__PURE__*/React.createElement(Tooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, sta.name));\n    })));\n  }\n\n}\n\nexport default PositionMap;","map":{"version":3,"sources":["/home/pawel/PycharmProjects/clear-air/src/components/PositionMap.js"],"names":["React","Component","Map","Marker","Popup","TileLayer","Tooltip","Icon","latLngBounds","axios","PositionMap","constructor","props","handleClick","e","onClickStation","leafPoint","iconUrl","iconSize","componentDidMount","console","log","stations","render","pos","map","sta","gegrLat","gegrLon","id","bind","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\nimport { Map, Marker, Popup, TileLayer, Tooltip } from 'react-leaflet';\nimport { Icon, latLngBounds } from 'leaflet';\nimport axios from 'axios';\n\n\nclass PositionMap extends Component {\n  constructor(props){\n    super(props);\n    this.leafPoint = new Icon({\n      iconUrl: 'icons8-fallen-leaf-48.png',\n      iconSize: [30, 30]\n    });\n\n  }\n\ncomponentDidMount(){\n  console.log(this.props.stations)\n}\n  handleClick = (e) => {\n    this.props.onClickStation(e);\n }\n\n  render(){\n\n\n  if(this.props.stations===[]){\n    this.pos = latLngBounds(this.props.stations.map(sta => [sta.gegrLat, sta.gegrLon]));\n  }else{\n\n  }\n\n\nconsole.log(this.props.stations===[] ? latLngBounds(this.props.stations.map(sta => [sta.gegrLat, sta.gegrLon])) : latLngBounds([[54.754139, 23.642153], [49.293564, 14.382222]]) )\nconsole.log(this.props.stations)\n     return(\n      <div className='map-wraper'>\n\n     <Map  bounds={ this.props.stations===[]  ?  latLngBounds([[54.754139, 23.642153], [49.293564, 14.382222]]) : latLngBounds(this.props.stations.map(sta => [sta.gegrLat, sta.gegrLon]))} >\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n        />\n        {this.props.stations.map(sta => {\n        return (\n          <Marker key={sta.id} position={[sta.gegrLat, sta.gegrLon]} icon={this.leafPoint} onClick={this.handleClick.bind(this, sta)}>\n            <Popup>{sta.name}</Popup>\n            <Tooltip>\n              {sta.name}\n            </Tooltip>\n          </Marker>\n        )\n      })}\n      </Map>\n      </div>\n  )}\n}\nexport default PositionMap;\n"]},"metadata":{},"sourceType":"module"}