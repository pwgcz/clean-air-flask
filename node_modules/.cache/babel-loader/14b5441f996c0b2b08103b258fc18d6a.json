{"ast":null,"code":"import _slicedToArray from\"/home/pawel/PycharmProjects/clean-air-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import'./App.css';import Nav from'./components/Nav';import PositionMap from'./components/PositionMap';import SearchForm from'./components/SearchForm';import Stations from'./components/Stations';import axios from'axios';function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),stationGraph=_useState2[0],setStationGraph=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),stations=_useState4[0],setStations=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),isInDatabase=_useState6[0],setIsInDatabase=_useState6[1];useEffect(function(){axios.get(\"/stations\").then(function(res){setStations(res.data);});},[]);var onClickStation=function onClickStation(data){setStationGraph([data]);};var getSerchResult=function getSerchResult(e){e.preventDefault();var result=e.target.elements.search.value;axios.get(\"/cities-stations/\".concat(result)).then(function(res){setStations(res.data);setIsInDatabase(true);}).catch(handleErrors);};var handleErrors=function handleErrors(err){if(err.response){setIsInDatabase(false);console.log('response error');}else if(err.request){console.log('request error');}else{console.log('error');}};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Nav,null),/*#__PURE__*/React.createElement(\"div\",{className:\"app\"},/*#__PURE__*/React.createElement(PositionMap,{stations:stations,onClickStation:onClickStation}),/*#__PURE__*/React.createElement(\"div\",{className:\"data-wraper\"},/*#__PURE__*/React.createElement(SearchForm,{getSerchResult:getSerchResult,valid:isInDatabase}),/*#__PURE__*/React.createElement(Stations,{station:stationGraph}))));}export default App;","map":{"version":3,"sources":["/home/pawel/PycharmProjects/clean-air-v2/src/App.js"],"names":["React","useState","useEffect","Nav","PositionMap","SearchForm","Stations","axios","App","stationGraph","setStationGraph","stations","setStations","isInDatabase","setIsInDatabase","get","then","res","data","onClickStation","getSerchResult","e","preventDefault","result","target","elements","search","value","catch","handleErrors","err","response","console","log","request"],"mappings":"+JAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,GAAP,KAAgB,kBAAhB,CACA,MAAOC,CAAAA,WAAP,KAAwB,0BAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,QAAP,KAAsB,uBAAtB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,QAASC,CAAAA,GAAT,EAAe,eAC2BP,QAAQ,CAAC,EAAD,CADnC,wCACNQ,YADM,eACQC,eADR,8BAEmBT,QAAQ,CAAC,EAAD,CAF3B,yCAENU,QAFM,eAEIC,WAFJ,8BAG0BX,QAAQ,CAAC,IAAD,CAHlC,yCAGNY,YAHM,eAGQC,eAHR,eAMbZ,SAAS,CAAC,UAAM,CACdK,KAAK,CAACQ,GAAN,cACCC,IADD,CACM,SAACC,GAAD,CAAS,CACbL,WAAW,CAACK,GAAG,CAACC,IAAL,CAAX,CACD,CAHD,EAID,CALQ,CAKP,EALO,CAAT,CAOA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACD,IAAD,CAAQ,CAC3BR,eAAe,CAAC,CAACQ,IAAD,CAAD,CAAf,CACH,CAFD,CAIE,GAAME,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,CAAD,CAAO,CAC5BA,CAAC,CAACC,cAAF,GACA,GAAMC,CAAAA,MAAM,CAAGF,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBC,MAAlB,CAAyBC,KAAxC,CACEpB,KAAK,CAACQ,GAAN,4BAA8BQ,MAA9B,GACCP,IADD,CACM,SAACC,GAAD,CAAS,CACbL,WAAW,CAACK,GAAG,CAACC,IAAL,CAAX,CACAJ,eAAe,CAAC,IAAD,CAAf,CACD,CAJD,EAIGc,KAJH,CAISC,YAJT,EAKH,CARD,CAUA,GAAMA,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,GAAD,CAAQ,CAC3B,GAAIA,GAAG,CAACC,QAAR,CAAiB,CACfjB,eAAe,CAAC,KAAD,CAAf,CACAkB,OAAO,CAACC,GAAR,CAAY,gBAAZ,EACD,CAHD,IAGM,IAAGH,GAAG,CAACI,OAAP,CAAe,CACnBF,OAAO,CAACC,GAAR,CAAY,eAAZ,EACD,CAFK,IAEC,CACLD,OAAO,CAACC,GAAR,CAAY,OAAZ,EACD,CACF,CATD,CAWF,mBACE,4CACI,oBAAC,GAAD,MADJ,cAEE,2BAAK,SAAS,CAAC,KAAf,eACE,oBAAC,WAAD,EAAa,QAAQ,CAAItB,QAAzB,CAAoC,cAAc,CAAEQ,cAApD,EADF,cAEE,2BAAK,SAAS,CAAC,aAAf,eACE,oBAAC,UAAD,EAAY,cAAc,CAAIC,cAA9B,CAA8C,KAAK,CAAEP,YAArD,EADF,cAEE,oBAAC,QAAD,EAAU,OAAO,CAAIJ,YAArB,EAFF,CAFF,CAFF,CADF,CAaD,CACD,cAAeD,CAAAA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Nav from './components/Nav';\nimport PositionMap from './components/PositionMap';\nimport SearchForm from './components/SearchForm';\nimport Stations  from './components/Stations';\nimport axios from 'axios';\n\nfunction App() {\n  const [stationGraph, setStationGraph] = useState([]);\n  const [stations, setStations] = useState([]);\n  const [isInDatabase, setIsInDatabase] =useState(true);\n\n\n  useEffect(() => {\n    axios.get(`/stations`)\n    .then((res) => {\n      setStations(res.data)\n    })\n  },[])\n\n  const onClickStation = (data)=>{\n      setStationGraph([data])\n  }\n\n    const getSerchResult = (e) => {\n      e.preventDefault();\n      const result = e.target.elements.search.value;\n        axios.get(`/cities-stations/${result}`)\n        .then((res) => {\n          setStations(res.data);\n          setIsInDatabase(true);\n        }).catch(handleErrors);\n    }\n\n    const handleErrors = (err) =>{\n      if (err.response){\n        setIsInDatabase(false);\n        console.log('response error')\n      }else if(err.request){\n        console.log('request error')\n      } else {\n        console.log('error')\n      }\n    };\n\n  return (\n    <div>\n        <Nav />\n      <div className='app'>\n        <PositionMap stations = {stations}  onClickStation={onClickStation} />\n        <div className='data-wraper'>\n          <SearchForm getSerchResult = {getSerchResult} valid={isInDatabase} />\n          <Stations station = {stationGraph} / >\n        </div>\n      </div>\n    </div>\n\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}