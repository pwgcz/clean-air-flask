{"ast":null,"code":"var _jsxFileName = \"/home/pawel/PycharmProjects/clear-air/src/components/PositionMap.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport { Map, Marker, Popup, TileLayer, Tooltip } from 'react-leaflet';\nimport { Icon, latLngBounds } from 'leaflet';\nimport axios from 'axios';\n\nclass PositionMap extends Component {\n  constructor(props) {\n    super(props);\n    this.stations = [];\n\n    this.handleClick = e => {\n      this.props.onClickStation(e);\n    };\n\n    this.leafPoint = new Icon({\n      iconUrl: 'icons8-fallen-leaf-48.png',\n      iconSize: [30, 30]\n    });\n    this.bounds = latLngBounds(props.stations.map(sta => {\n      return [sta.gegrLat, sta.gegrLon];\n    }));\n  }\n\n  componentDidMount() {\n    axios.get(`/stations`).then(res => {\n      this.setStations(res.data);\n    });\n  }\n\n  render() {\n    let pos = [this.props.stations.map(sta => {\n      return [sta.gegrLat, sta.gegrLon];\n    })];\n    console.log(this.bounds);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-wraper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      center: this.props.position,\n      zoom: 6,\n      bounds: latLngBounds([this.props.position], [50.912475, 15.31219]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }), this.stations.map(sta => {\n      return /*#__PURE__*/React.createElement(Marker, {\n        key: sta.id,\n        position: [sta.gegrLat, sta.gegrLon],\n        icon: this.leafPoint,\n        onClick: this.handleClick.bind(this, sta),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Popup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, sta.name), /*#__PURE__*/React.createElement(Tooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, sta.name));\n    })));\n  }\n\n}\n\nexport default PositionMap;","map":{"version":3,"sources":["/home/pawel/PycharmProjects/clear-air/src/components/PositionMap.js"],"names":["React","Component","Map","Marker","Popup","TileLayer","Tooltip","Icon","latLngBounds","axios","PositionMap","constructor","props","stations","handleClick","e","onClickStation","leafPoint","iconUrl","iconSize","bounds","map","sta","gegrLat","gegrLon","componentDidMount","get","then","res","setStations","data","render","pos","console","log","position","id","bind","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\nimport { Map, Marker, Popup, TileLayer, Tooltip } from 'react-leaflet';\nimport { Icon, latLngBounds } from 'leaflet';\nimport axios from 'axios';\n\n\nclass PositionMap extends Component {\n  constructor(props){\n    super(props);\n    this.leafPoint = new Icon({\n      iconUrl: 'icons8-fallen-leaf-48.png',\n      iconSize: [30, 30]\n    });\n    this.bounds = latLngBounds(props.stations.map(sta => {return [sta.gegrLat, sta.gegrLon]}))\n\n  }\n  stations = []\n\n  componentDidMount(){\n    axios.get(`/stations`)\n    .then((res) => {\n      this.setStations(res.data)\n\n    })\n  }\n\n  handleClick = (e) => {\n    this.props.onClickStation(e);\n }\n\n  render(){\n\nlet pos = [this.props.stations.map(sta => {return [sta.gegrLat, sta.gegrLon]})]\nconsole.log(this.bounds)\n\n     return(\n\n      <div className='map-wraper'>\n      <Map center={this.props.position} zoom={6} bounds={latLngBounds([this.props.position], [50.912475, 15.31219])} >\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n        />\n        {this.stations.map(sta => {\n        return (\n          <Marker key={sta.id} position={[sta.gegrLat, sta.gegrLon]} icon={this.leafPoint} onClick={this.handleClick.bind(this, sta)}>\n            <Popup>{sta.name}</Popup>\n            <Tooltip>\n              {sta.name}\n            </Tooltip>\n          </Marker>\n        )\n      })}\n      </Map>\n      </div>\n  )}\n}\nexport default PositionMap;\n"]},"metadata":{},"sourceType":"module"}