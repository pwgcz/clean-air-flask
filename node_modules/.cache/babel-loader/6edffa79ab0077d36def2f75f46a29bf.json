{"ast":null,"code":"var _jsxFileName = \"/home/pawel/PycharmProjects/clear-air/src/components/MeasuringData.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis } from 'recharts';\nexport const MeasuringData = ({\n  standId\n}) => {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    axios.get(`/measuring-data/${standId}`).then(res => {\n      setData(res.data.slice(1, 12));\n    });\n  }, []);\n  console.log(data);\n  return /*#__PURE__*/React.createElement(LineChart, {\n    width: 600,\n    height: 300,\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"value\",\n    stroke: \"#8884d8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CartesianGrid, {\n    stroke: \"#ccc\",\n    strokeDasharray: \"1 1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"date\",\n    interval: 0,\n    angle: 30,\n    dx: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    dataKey: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/home/pawel/PycharmProjects/clear-air/src/components/MeasuringData.js"],"names":["React","useEffect","useState","axios","LineChart","Line","CartesianGrid","XAxis","YAxis","MeasuringData","standId","data","setData","get","then","res","slice","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,aAA1B,EAAyCC,KAAzC,EAAgDC,KAAhD,QAA6D,UAA7D;AAEA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAE3C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AAGAD,EAAAA,SAAS,CAAC,MAAM;AAEdE,IAAAA,KAAK,CAACU,GAAN,CAAW,mBAAkBH,OAAQ,EAArC,EACCI,IADD,CACOC,GAAD,IAAS;AACbH,MAAAA,OAAO,CAACG,GAAG,CAACJ,IAAJ,CAASK,KAAT,CAAe,CAAf,EAAkB,EAAlB,CAAD,CAAP;AACD,KAHD;AAID,GANQ,EAMN,EANM,CAAT;AAQAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AAIE,sBAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE,GAAlB;AAAuB,IAAA,MAAM,EAAE,GAA/B;AAAoC,IAAA,IAAI,EAAEA,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC,OAA9B;AAAsC,IAAA,MAAM,EAAC,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAC,MAAtB;AAA6B,IAAA,eAAe,EAAC,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,MAAf;AAAsB,IAAA,QAAQ,EAAE,CAAhC;AAAmC,IAAA,KAAK,EAAE,EAA1C;AAA8C,IAAA,EAAE,EAAE,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAFF;AAUD,CA3BM","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis } from 'recharts';\n\nexport const MeasuringData = ({standId}) =>{\n\nconst [data, setData] = useState([])\n\n\nuseEffect(() => {\n\n  axios.get(`/measuring-data/${standId}`)\n  .then((res) => {\n    setData(res.data.slice(1, 12));\n  })\n}, []);\n\nconsole.log(data)\n\n\n\n  return(\n\n    <LineChart width={600} height={300} data={data}>\n      <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" />\n      <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"1 1\" />\n      <XAxis dataKey=\"date\" interval={0} angle={30} dx={20} />\n      <YAxis dataKey=\"value\" />\n    </LineChart>\n\n  )\n}\n"]},"metadata":{},"sourceType":"module"}