{"ast":null,"code":"import _slicedToArray from\"/home/pawel/PycharmProjects/clean-air-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import axios from'axios';import{MeasuringData}from'./MeasuringData';export var Stands=function Stands(_ref){var station=_ref.station;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),stands=_useState2[0],setStands=_useState2[1];var standsList=[];useEffect(function(){axios.get(\"/measuring-stands/\".concat(station.id)).then(function(res){setStands(res.data);}).catch(handleErrors);},[station.id]);var handleErrors=function handleErrors(err){if(err.response){console.log('response error');}else if(err.request){console.log('request error');}else{console.log('unexpectec error');}};standsList=stands.map(function(sta){return/*#__PURE__*/React.createElement(\"div\",{key:sta.id},/*#__PURE__*/React.createElement(\"h4\",null,sta.name,\" (\",sta.code,\")\"),/*#__PURE__*/React.createElement(\"div\",{className:\"stand-card\"},/*#__PURE__*/React.createElement(MeasuringData,{stand:sta})));});return/*#__PURE__*/React.createElement(\"div\",null,standsList);};","map":{"version":3,"sources":["/home/pawel/PycharmProjects/clean-air-v2/src/components/Stands.js"],"names":["React","useEffect","useState","axios","MeasuringData","Stands","station","stands","setStands","standsList","get","id","then","res","data","catch","handleErrors","err","response","console","log","request","map","sta","name","code"],"mappings":"+JAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,aAAT,KAA8B,iBAA9B,CAIA,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAc,IAAZC,CAAAA,OAAY,MAAZA,OAAY,eAERJ,QAAQ,CAAC,EAAD,CAFA,wCAE7BK,MAF6B,eAErBC,SAFqB,eAGpC,GAAIC,CAAAA,UAAU,CAAG,EAAjB,CAEAR,SAAS,CAAC,UAAM,CACdE,KAAK,CAACO,GAAN,6BAA+BJ,OAAO,CAACK,EAAvC,GACCC,IADD,CACM,SAACC,GAAD,CAAS,CACbL,SAAS,CAACK,GAAG,CAACC,IAAL,CAAT,CACD,CAHD,EAGGC,KAHH,CAGSC,YAHT,EAID,CALQ,CAKP,CAACV,OAAO,CAACK,EAAT,CALO,CAAT,CAOA,GAAMK,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,GAAD,CAAQ,CAC3B,GAAIA,GAAG,CAACC,QAAR,CAAiB,CACfC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EACD,CAFD,IAEM,IAAGH,GAAG,CAACI,OAAP,CAAe,CACnBF,OAAO,CAACC,GAAR,CAAY,eAAZ,EACD,CAFK,IAEC,CACLD,OAAO,CAACC,GAAR,CAAY,kBAAZ,EACD,CACF,CARD,CAUGX,UAAU,CAAGF,MAAM,CAACe,GAAP,CAAW,SAAAC,GAAG,CAAI,CAC9B,mBACE,2BAAK,GAAG,CAAEA,GAAG,CAACZ,EAAd,eACA,8BAAKY,GAAG,CAACC,IAAT,MAAiBD,GAAG,CAACE,IAArB,KADA,cAGA,2BAAK,SAAS,CAAC,YAAf,eACE,oBAAC,aAAD,EAAe,KAAK,CAAEF,GAAtB,EADF,CAHA,CADF,CASD,CAVa,CAAb,CAcD,mBACE,+BACDd,UADC,CADF,CAKD,CAzCM","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { MeasuringData } from './MeasuringData';\n\n\n\nexport const Stands = ({station}) =>{\n\nconst [stands, setStands] = useState([])\nlet standsList = []\n\nuseEffect(() => {\n  axios.get(`/measuring-stands/${station.id}`)\n  .then((res) => {\n    setStands(res.data);\n  }).catch(handleErrors)\n},[station.id]);\n\nconst handleErrors = (err) =>{\n  if (err.response){\n    console.log('response error')\n  }else if(err.request){\n    console.log('request error')\n  } else {\n    console.log('unexpectec error')\n  }\n};\n\n   standsList = stands.map(sta => {\n    return (\n      <div key={sta.id} >\n      <h4>{sta.name} ({sta.code})</h4>\n\n      <div className='stand-card'>\n        <MeasuringData stand={sta}/>\n        </div>\n      </div>\n    )\n  })\n\n\n\n  return(\n    <div>\n  {standsList}\n  </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}